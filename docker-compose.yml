services:

# ----------- real time data ----------------#
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "CQdFOKLdQ8Si0WWDeEUgGg"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data       # <-- persist Kafka
    restart: unless-stopped

# ----------- data storage ----------------#

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123" #HTTP interface
      - "9000:9000" # native interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: mysecurepassword
    restart: unless-stopped

# ----------- visualization ----------------#

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource

      # === EMBEDDING + ANONYMOUS ACCESS ===
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
      GF_AUTH_DISABLE_LOGIN_FORM: "false"

      # === URL SETTINGS ===
      GF_SERVER_DOMAIN: localhost
      GF_SERVER_ROOT_URL: http://localhost:3000/
      GF_SERVER_SERVE_FROM_SUB_PATH: "false"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped


# ----------- monitoring ----------------#

# checks if services (like health) are up
  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports:
      - "9115:9115"
    command:
      - "--config.file=/etc/blackbox/blackbox.yml"
    volumes:
      - ./blackbox.yml:/etc/blackbox/blackbox.yml
    restart: unless-stopped

# scrapes endpoints for metrics/alerts. the central "brain"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped


# ----------- logs ----------------#

# collects all logs and ships to loki
  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./log_data:/var/log/pipeline:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

# aggregates all logs
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    restart: unless-stopped

# ----------- code ----------------#
  pipeline:
    build:
      context: .
      dockerfile: pipeline.Dockerfile
    container_name: pipeline
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - clickhouse
    volumes:
      - ./log_data:/app/log_data
    restart: unless-stopped
    stop_grace_period: 20s

volumes:
  clickhouse_data:
  grafana-data:
  kafka-data: